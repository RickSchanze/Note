{"ID":"20240215201906-n0lngct","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240215201906-n0lngct","title":"我今天才知道，原来TCP为了保证可靠传输做了这么多","updated":"20240215205001"},"Children":[{"ID":"20240215202539-pnfxfbx","Type":"NodeParagraph","Properties":{"id":"20240215202539-pnfxfbx","updated":"20240215202542"},"Children":[{"Type":"NodeText","Data":"原文："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/343398180","TextMarkTextContent":"我今天才知道，原来TCP为了保证可靠传输做了这么多 - 知乎 (zhihu.com)"}]},{"ID":"20240215202543-z841vbu","Type":"NodeThematicBreak","Properties":{"id":"20240215202543-z841vbu"}},{"ID":"20240215202127-lsrub99","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-lsrub99","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"前言"}]},{"ID":"20240215202127-qkvze4g","Type":"NodeParagraph","Properties":{"id":"20240215202127-qkvze4g","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"本节内容有点多，不过关于 TCP 的话，除了三四次握手就是可靠传输了，高频重点知识点，大家还是搞清楚比较好。"}]},{"ID":"20240215202127-lk40tij","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-lk40tij","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"1.TCP 可靠传输概览"}]},{"ID":"20240215202127-2u7b348","Type":"NodeParagraph","Properties":{"id":"20240215202127-2u7b348","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"首先解释一下，什么是可靠传输：可靠传输就是保证接收方收到的字节流和发送方发出的字节流是完全一样的。"}]},{"ID":"20240215202127-txpyhvn","Type":"NodeParagraph","Properties":{"id":"20240215202127-txpyhvn","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"网络层是没有可靠传输机制的，尽自己最大的努力进行交付。而传输层使用 TCP 实现可靠传输，TCP 保证可靠传输的机制有如下几种："}]},{"ID":"20240215202127-8fjd58t","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-8fjd58t","updated":"20240215202127"},"Children":[{"ID":"20240215202127-licd6xv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-licd6xv","updated":"20240215202127"},"Children":[{"ID":"20240215202127-v8zkg46","Type":"NodeParagraph","Properties":{"id":"20240215202127-v8zkg46","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"1）校验和 Checksum（稍作了解即可）"}]}]},{"ID":"20240215202127-olum9ig","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-olum9ig","updated":"20240215202127"},"Children":[{"ID":"20240215202127-kdkxd1w","Type":"NodeParagraph","Properties":{"id":"20240215202127-kdkxd1w","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"2）序列号和确认应答机制（重要）"}]}]},{"ID":"20240215202127-kjqjqxt","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-kjqjqxt","updated":"20240215202127"},"Children":[{"ID":"20240215202127-utl1ee4","Type":"NodeParagraph","Properties":{"id":"20240215202127-utl1ee4","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"3）重传机制（重要）"}]}]},{"ID":"20240215202127-i11a7zb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-i11a7zb","updated":"20240215202127"},"Children":[{"ID":"20240215202127-fftjrue","Type":"NodeParagraph","Properties":{"id":"20240215202127-fftjrue","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"4）流量控制（滑动窗口协议）（非常重要）"}]}]},{"ID":"20240215202127-z4k7i6h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-z4k7i6h","updated":"20240215202127"},"Children":[{"ID":"20240215202127-itmc456","Type":"NodeParagraph","Properties":{"id":"20240215202127-itmc456","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"5）拥塞控制（重要）"}]}]}]},{"ID":"20240215202127-oyfq1eh","Type":"NodeParagraph","Properties":{"id":"20240215202127-oyfq1eh","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"以上除了校验和大家可以只稍作了解之外，其他都是非常重要的，务必烂熟于心。"}]},{"ID":"20240215202127-7v6du2l","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-7v6du2l","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"2. 校验和"}]},{"ID":"20240215202127-lojpxgm","Type":"NodeParagraph","Properties":{"id":"20240215202127-lojpxgm","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"所谓 TCP 的校验和（Checksum）就是说：由发送端计算待发送 TCP 报文段的校验和，然后接收端对接收到的 TCP 报文段验证其校验和（TCP 的校验和是一个端到端的校验和）。其目的是为了发现 TCP 的首部和数据在发送端到接收端之间是否发生了变动。如果接收方检测到校验和有差错，则该 TCP 报文段会被直接丢弃。"}]},{"ID":"20240215202127-s8su8bc","Type":"NodeBlockquote","Properties":{"id":"20240215202127-s8su8bc","updated":"20240215202127"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240215202127-cz21evx","Type":"NodeParagraph","Properties":{"id":"20240215202127-cz21evx","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"关于校验和是如何计算和验证的，并非高频重点知识，本文就不详细解释了，感兴趣的童鞋可自行百度"}]}]},{"ID":"20240215202127-8333552","Type":"NodeParagraph","Properties":{"id":"20240215202127-8333552","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"TCP 在计算校验和时，需要加上一个 12 字节的伪首部。"}]},{"ID":"20240215202127-nmk95d6","Type":"NodeBlockquote","Properties":{"id":"20240215202127-nmk95d6","updated":"20240215202127"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240215202127-jam1edf","Type":"NodeParagraph","Properties":{"id":"20240215202127-jam1edf","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"其实 UDP 也有校验和机制，只不过是可选的，而 TCP 的校验和是必须的，TCP 和 UDP 在计算校验和时都需要加上一个 12 字节的伪首部。"}]}]},{"ID":"20240215202127-e8ebmwk","Type":"NodeParagraph","Properties":{"id":"20240215202127-e8ebmwk","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"解释下伪首部的概念，伪首部的数据是从 IP 数据报头获取的，共有 12 字节，包含如下信息：源 IP 地址、目的 IP 地址、保留字节 (置 0)、传输层协议号 (TCP 是 6)、TCP 报文长度 (首部 + 数据)："}]},{"ID":"20240215202127-1rrwow7","Type":"NodeParagraph","Properties":{"id":"20240215202127-1rrwow7","updated":"20240215202620"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-0dae15276d7f8f5d08f8ba5c6a3dcccf_720w-20240215202424-zlgasue.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-i7y3csn","Type":"NodeParagraph","Properties":{"id":"20240215202127-i7y3csn","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"伪首部是为了增加 TCP 校验和的检错能力：如根据目的 IP 地址检查这个 TCP 报文是不是传给我的、根据传输层协议号检查传输层协议是否选对了...... 伪首部只在校验的时候使用。"}]},{"ID":"20240215202127-4zc2g1y","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-4zc2g1y","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"3. 序列号和确认应答机制"}]},{"ID":"20240215202127-uvaq2p2","Type":"NodeParagraph","Properties":{"id":"20240215202127-uvaq2p2","updated":"20240215202702"},"Children":[{"Type":"NodeText","Data":"TCP 报文段的首部中有一个序号字段，在之前的文章 关于 TCP 三次握手和四次挥手"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240215195611-hxtdqto","TextMarkBlockRefSubtype":"d","TextMarkTextContent":"“三次握手，四次挥手”你真的懂吗？"},{"Type":"NodeText","Data":" 已经解释过：指的是该报文段第一个字节的序号（一个字节占一个序号）"}]},{"ID":"20240215202127-vxi8z45","Type":"NodeParagraph","Properties":{"id":"20240215202127-vxi8z45","updated":"20240215202738"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-73e813ed90f7cd7950d541f85f651742_720w-20240215202424-7ov1nm9.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-21qq6a6","Type":"NodeParagraph","Properties":{"id":"20240215202127-21qq6a6","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"确认应答机制就是接收方收到 TCP 报文段后就会返回"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"一个确认应答消息"},{"Type":"NodeText","Data":"："}]},{"ID":"20240215202127-bbzqsyp","Type":"NodeParagraph","Properties":{"id":"20240215202127-bbzqsyp","updated":"20240215203643"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-d9a130ebc8f5b1bc73868a3acd378a78_720w-20240215202424-mutrtq5.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-7qle16w","Type":"NodeParagraph","Properties":{"id":"20240215202127-7qle16w","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"确认应答机制和重传机制不分家，两者紧密相连。下面我们详细讲解一下重传机制"}]},{"ID":"20240215202127-h9ix2bt","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-h9ix2bt","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"4. 重传机制"}]},{"ID":"20240215202127-xg967fy","Type":"NodeParagraph","Properties":{"id":"20240215202127-xg967fy","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"在错综复杂的网络，并不一定能如上图那么顺利地传输报文，报文存在丢失的可能性。报文丢失的可能因素有很多种，包括应用故障，路由设备过载，或暂时的服务宕机。报文级别速度是很高的，通常来说报文的丢失是暂时的，因此 TCP 能够发现和恢复报文丢失显得尤为重要。"}]},{"ID":"20240215202127-iljjbj8","Type":"NodeParagraph","Properties":{"id":"20240215202127-iljjbj8","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"重传机制是 TCP 最基本的错误恢复功能，常见的重传机制有如下："}]},{"ID":"20240215202127-vg5weoe","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-vg5weoe","updated":"20240215202127"},"Children":[{"ID":"20240215202127-97hzovl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-97hzovl","updated":"20240215202127"},"Children":[{"ID":"20240215202127-2xagx9d","Type":"NodeParagraph","Properties":{"id":"20240215202127-2xagx9d","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"超时重传"}]}]},{"ID":"20240215202127-7pnrao9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-7pnrao9","updated":"20240215202127"},"Children":[{"ID":"20240215202127-lm15i5h","Type":"NodeParagraph","Properties":{"id":"20240215202127-lm15i5h","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"快速重传"}]}]}]},{"ID":"20240215202127-h4iuv32","Type":"NodeParagraph","Properties":{"id":"20240215202127-h4iuv32","updated":"20240215202127"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"① 超时重传"}]},{"ID":"20240215202127-veuzej3","Type":"NodeParagraph","Properties":{"id":"20240215202127-veuzej3","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"大概一说到重传大家第一个想到的就是超时重传吧。超时重传就是 TCP 发送方在发送报文的时候，设定一个定时器，如果在规定的时间内没有收到接收方发来的 ACK 确认报文，发送方就会重传这个已发送的报文段。"}]},{"ID":"20240215202127-l7g72ne","Type":"NodeParagraph","Properties":{"id":"20240215202127-l7g72ne","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"对于发送方没有正确接收到接收方发来的 ACK 确认报文的情况，有以下两种（也就是在这两种情况下会发生超时重传）："}]},{"ID":"20240215202127-xosniay","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-xosniay","updated":"20240215202127"},"Children":[{"ID":"20240215202127-k5e62w5","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-k5e62w5","updated":"20240215202127"},"Children":[{"ID":"20240215202127-plte5hq","Type":"NodeParagraph","Properties":{"id":"20240215202127-plte5hq","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"第一种情况：报文段丢失"}]}]}]},{"ID":"20240215202127-v2ade8n","Type":"NodeParagraph","Properties":{"id":"20240215202127-v2ade8n","updated":"20240215203641"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-ed9ab01f59706556ce4bbc15b3d3534a_720w-20240215202424-rgysrjb.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-s7hru7x","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-s7hru7x","updated":"20240215202127"},"Children":[{"ID":"20240215202127-f2seofy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-f2seofy","updated":"20240215202127"},"Children":[{"ID":"20240215202127-9eebzil","Type":"NodeParagraph","Properties":{"id":"20240215202127-9eebzil","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"第二种情况：接收方的 ACK 确认报文丢失"}]}]}]},{"ID":"20240215202127-bqnrqi7","Type":"NodeParagraph","Properties":{"id":"20240215202127-bqnrqi7","updated":"20240215203639"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-08703634caa8f708a99444e23029137a_720w-20240215202424-bxv5syd.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-yng27br","Type":"NodeParagraph","Properties":{"id":"20240215202127-yng27br","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"超时重传时间我们一般用 RTO（Retransmission Timeout） 来表示，那么，这个 RTO 设置为多少最合适呢，也就是说经过多长时间进行重传最好？"}]},{"ID":"20240215202127-bvnh7j8","Type":"NodeParagraph","Properties":{"id":"20240215202127-bvnh7j8","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"在这之前，我们先讲解一下 RTT（Round-Trip Time 往返时延） 的概念：RTT 就是数据从网络一端传送到另一端所需的时间，也就是报文段的往返时间。"}]},{"ID":"20240215202127-svd6vwv","Type":"NodeParagraph","Properties":{"id":"20240215202127-svd6vwv","updated":"20240215203637"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-e75d5c9a12b6afa687bd38e05cf0af43_720w-20240215202425-lp8ymwv.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-3xwkyg7","Type":"NodeParagraph","Properties":{"id":"20240215202127-3xwkyg7","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"显然，⭐ 超时重传时间 RTO 的值应该略大于报文往返 RTT 的值："}]},{"ID":"20240215202127-f50pk5e","Type":"NodeParagraph","Properties":{"id":"20240215202127-f50pk5e","updated":"20240215203635"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-1f390bcc6d830b8bd6015b3e394e1d5a_720w-20240215202425-d8n5byn.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-b5amri6","Type":"NodeParagraph","Properties":{"id":"20240215202127-b5amri6","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"我们可以假想一下，如果超时重传时间 RTO 远大于或小于 RTT，会发生什么情况："}]},{"ID":"20240215202127-q9j2la0","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-q9j2la0","updated":"20240215202127"},"Children":[{"ID":"20240215202127-oianzm6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-oianzm6","updated":"20240215202127"},"Children":[{"ID":"20240215202127-zb428ef","Type":"NodeParagraph","Properties":{"id":"20240215202127-zb428ef","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"RTO 远大于 RTT：网络的空闲时间增大，降低了网络传输效率"}]}]}]},{"ID":"20240215202127-u11elzg","Type":"NodeParagraph","Properties":{"id":"20240215202127-u11elzg","updated":"20240215203633"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-c5be67d34c4e73fd34314467cdbd52f9_720w-20240215202425-65jmod9.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-ymkkx7h","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-ymkkx7h","updated":"20240215202127"},"Children":[{"ID":"20240215202127-qs7q4rk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-qs7q4rk","updated":"20240215202127"},"Children":[{"ID":"20240215202127-dk0gjgk","Type":"NodeParagraph","Properties":{"id":"20240215202127-dk0gjgk","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"RTO 小于 RTT：不必要的重传，导致网络负荷增大"}]}]}]},{"ID":"20240215202127-vjwnjp6","Type":"NodeParagraph","Properties":{"id":"20240215202127-vjwnjp6","updated":"20240215203631"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-9c53a0e0bf479fabdcbba29cf153f9d3_720w-20240215202425-40nfu1y.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-9g9wi11","Type":"NodeParagraph","Properties":{"id":"20240215202127-9g9wi11","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"如果超时重传的数据又超时了该怎么办呢？TCP 的策略是重传的超时间隔加倍。"}]},{"ID":"20240215202127-1ivqv0t","Type":"NodeParagraph","Properties":{"id":"20240215202127-1ivqv0t","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"也就是说，每进行一次超时重传，都会将下一次重传的超时时间间隔设为先前值的两倍。"}]},{"ID":"20240215202127-5yo47z1","Type":"NodeParagraph","Properties":{"id":"20240215202127-5yo47z1","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"超时触发重传存在的问题是，超时周期可能相对较长。有没有一种机制可以减少超时重传的等待时间呢？于是 「快速重传」 机制应运而生"}]},{"ID":"20240215202127-j08l7yq","Type":"NodeParagraph","Properties":{"id":"20240215202127-j08l7yq","updated":"20240215202127"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"快速重传"}]},{"ID":"20240215202127-78fct6y","Type":"NodeParagraph","Properties":{"id":"20240215202127-78fct6y","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"快速重传（Fast Retransmit）机制不以时间为驱动，而是以数据驱动重传。"}]},{"ID":"20240215202127-woyx45b","Type":"NodeParagraph","Properties":{"id":"20240215202127-woyx45b","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"快速重传机制的原理：每当接收方收到比期望序号大的失序报文段到达时，就向发送方发送一个冗余 ACK，指明下一个期待字节的序号。"}]},{"ID":"20240215202127-fqxb231","Type":"NodeParagraph","Properties":{"id":"20240215202127-fqxb231","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"举个例子：发送方已经发送 1、2、3、4、5报文段"}]},{"ID":"20240215202127-723y2t5","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-723y2t5","updated":"20240215202127"},"Children":[{"ID":"20240215202127-xxfhwd2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-xxfhwd2","updated":"20240215202127"},"Children":[{"ID":"20240215202127-2op4bhw","Type":"NodeParagraph","Properties":{"id":"20240215202127-2op4bhw","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"接收方收到报文段 1，返回 1 的 ACK 确认报文（确认号为报文段 2 的第一个字节）"}]}]},{"ID":"20240215202127-fgfln4u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-fgfln4u","updated":"20240215202127"},"Children":[{"ID":"20240215202127-jqhrh2a","Type":"NodeParagraph","Properties":{"id":"20240215202127-jqhrh2a","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"接收方收到报文段 3，仍然返回 1 的 ACK 确认报文（确认号为报文段 2 的第一个字节）"}]}]},{"ID":"20240215202127-v0zbyqf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-v0zbyqf","updated":"20240215202127"},"Children":[{"ID":"20240215202127-zpnhtpe","Type":"NodeParagraph","Properties":{"id":"20240215202127-zpnhtpe","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"接收方收到报文段 4，仍然返回 1 的 ACK 确认报文（确认号为报文段 2 的第一个字节）"}]}]},{"ID":"20240215202127-j18qaom","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-j18qaom","updated":"20240215202127"},"Children":[{"ID":"20240215202127-b1foiqx","Type":"NodeParagraph","Properties":{"id":"20240215202127-b1foiqx","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"接收方收到报文段 5，仍然返回 1 的 ACK 确认报文（确认号为报文段 2 的第一个字节）"}]}]},{"ID":"20240215202127-milluif","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-milluif","updated":"20240215202127"},"Children":[{"ID":"20240215202127-d3c9h15","Type":"NodeParagraph","Properties":{"id":"20240215202127-d3c9h15","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"接收方收到 3 个对于报文段 1 的冗余 ACK，认为报文段 2 丢失，于是重传报文段 2"}]}]},{"ID":"20240215202127-bcm1m1t","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-bcm1m1t","updated":"20240215202127"},"Children":[{"ID":"20240215202127-nfczq0z","Type":"NodeParagraph","Properties":{"id":"20240215202127-nfczq0z","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"最后，接收方收到了报文段 2，此时因为报文段 3、4、5 都收到了，所以返回 6 的 ACK 确认报文（确认号为报文段 6 的第一个字节）"}]}]}]},{"ID":"20240215202127-o7tkf4w","Type":"NodeParagraph","Properties":{"id":"20240215202127-o7tkf4w","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"一图胜千言："}]},{"ID":"20240215202127-j5speri","Type":"NodeParagraph","Properties":{"id":"20240215202127-j5speri","updated":"20240215204116"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-17dd3b71de595378c691ae1dad052001_720w-20240215202425-nmctrd6.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-a1y05bm","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-a1y05bm","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"4. 滑动窗口协议"}]},{"ID":"20240215202127-d99qumg","Type":"NodeParagraph","Properties":{"id":"20240215202127-d99qumg","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"可以说不知道滑动窗口协议 = 不知道 TCP。该知识点的分量之重，大家一定好好把握。"}]},{"ID":"20240215202127-3ort0c3","Type":"NodeParagraph","Properties":{"id":"20240215202127-3ort0c3","updated":"20240215202127"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"① 累积确认"}]},{"ID":"20240215202127-dpa0rvq","Type":"NodeParagraph","Properties":{"id":"20240215202127-dpa0rvq","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"上文讲快速重传的时候，不知道大家有没有注意到这句话 “ 最后，接收方收到了报文段 2，此时因为报文段 3、4、5 都收到了，所以返回 6 的 ACK 确认报文 ”。"}]},{"ID":"20240215202127-airwj7w","Type":"NodeParagraph","Properties":{"id":"20240215202127-airwj7w","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"为什么这里会直接返回报文段 6 的确认应答呢，之前我们不是说每发送一个 TCP 报文段，就进行一次确认应答吗（只有收到了上一个报文段的确认应答后才能发送下一个报文段的）？按照这个模式，我们应该先返回报文段 3 的确认应答啊。"}]},{"ID":"20240215202127-ut58pvk","Type":"NodeParagraph","Properties":{"id":"20240215202127-ut58pvk","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"其实只有收到了上一个报文段的确认应答后才能发送下一个报文段的这种模式效率非常低下。每个报文段的往返时间越长，网络的吞吐量就越低，通信的效率就越低。"}]},{"ID":"20240215202127-mqcw389","Type":"NodeParagraph","Properties":{"id":"20240215202127-mqcw389","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"举个例子：如果你说完一句话，我在处理其他事情，没有及时回复你，你就等着我做完其他事情后回复你，你才能说下一句话，很显然这不现实。"}]},{"ID":"20240215202127-mbl726y","Type":"NodeParagraph","Properties":{"id":"20240215202127-mbl726y","updated":"20240215203836"},"Children":[{"Type":"NodeText","Data":"为此，TCP 引入了 窗口 的概念。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"窗口大小就是指无需等待确认应答，可以继续发送数据的最大值。"}]},{"ID":"20240215202127-tzfmsnl","Type":"NodeParagraph","Properties":{"id":"20240215202127-tzfmsnl","updated":"20240215203848"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"⭐ 窗口的实现实际上是操作系统开辟的一个缓冲区，发送方在等待确认应答报文返回之前，必须在缓冲区中保留已发送的数据。如果在规定时间间隔内收到确认应答报文，就可以将数据从缓冲区中清除。"}]},{"ID":"20240215202127-a9d10oe","Type":"NodeParagraph","Properties":{"id":"20240215202127-a9d10oe","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"假设窗口大小为 3 个 TCP 段，那么发送方就可以「连续发送」 3 个 TCP 段，并且中途即使有 ACK响应报文丢失，也可以通过「下一个确认应答进行确认」。"}]},{"ID":"20240215202127-9yk7yel","Type":"NodeParagraph","Properties":{"id":"20240215202127-9yk7yel","updated":"20240215203952"},"Children":[{"Type":"NodeText","Data":"如下图：ACK 300 即使丢失了，也不会进行数据重发，可以通过下一个确认应答进行确认。只要发送方收到了 ACK 400 的确认应答，就意味着 400 之前的所有数据「接收方」都收到了。这个模式就叫"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"累积确认"},{"Type":"NodeText","Data":"或者累积应答。"}]},{"ID":"20240215202127-s1kh3pj","Type":"NodeParagraph","Properties":{"id":"20240215202127-s1kh3pj","updated":"20240215204114"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-61957f3a61bc7ef342e6e39496bc010a_720w-20240215202425-jsve773.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-jwy85iv","Type":"NodeParagraph","Properties":{"id":"20240215202127-jwy85iv","updated":"20240215202127"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"② 发送方的滑动窗口"}]},{"ID":"20240215202127-2i6f9w3","Type":"NodeBlockquote","Properties":{"id":"20240215202127-2i6f9w3","updated":"20240215202127"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240215202127-h55117u","Type":"NodeParagraph","Properties":{"id":"20240215202127-h55117u","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"该小节图片均来自公众号：小林 Coding"}]}]},{"ID":"20240215202127-0turfgw","Type":"NodeParagraph","Properties":{"id":"20240215202127-0turfgw","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"我们先来看看发送方的窗口，下图就是发送方缓存的数据，根据处理的情况分成四个部分："}]},{"ID":"20240215202127-tprm6zx","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-tprm6zx","updated":"20240215202127"},"Children":[{"ID":"20240215202127-ewh105l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-ewh105l","updated":"20240215202127"},"Children":[{"ID":"20240215202127-ryoc8mq","Type":"NodeParagraph","Properties":{"id":"20240215202127-ryoc8mq","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"已发送并收到 ACK 确认应答的数据"}]}]},{"ID":"20240215202127-6kqz0b4","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-6kqz0b4","updated":"20240215202127"},"Children":[{"ID":"20240215202127-tinby7g","Type":"NodeParagraph","Properties":{"id":"20240215202127-tinby7g","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"已发送但未收到 ACK 确认应答的数据"}]}]},{"ID":"20240215202127-1yi7y1a","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-1yi7y1a","updated":"20240215202127"},"Children":[{"ID":"20240215202127-s2bokzk","Type":"NodeParagraph","Properties":{"id":"20240215202127-s2bokzk","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"未发送但总大小在接收方处理范围内的数据"}]}]},{"ID":"20240215202127-kyxln3q","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-kyxln3q","updated":"20240215202127"},"Children":[{"ID":"20240215202127-db7lr53","Type":"NodeParagraph","Properties":{"id":"20240215202127-db7lr53","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"未发送但总大小超过接收方处理范围的数据"}]}]}]},{"ID":"20240215202127-m4wfj2i","Type":"NodeParagraph","Properties":{"id":"20240215202127-m4wfj2i","updated":"20240215204112"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-844ed69f04a53c75d04be1bfc98216cc_720w-20240215202425-rqa3zs2.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-1a2yffq","Type":"NodeParagraph","Properties":{"id":"20240215202127-1a2yffq","updated":"20240215202127"},"Children":[{"Type":"NodeText","Data":"当发送方把数据全部发送出去后，可用窗口的大小就为 0 了，表明可用窗口耗尽，在没收到 ACK 确认之前无法继续发送数据："}]},{"ID":"20240215202127-z4co410","Type":"NodeParagraph","Properties":{"id":"20240215202127-z4co410","updated":"20240215204143"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-250b67eb33b432d1dda4dc81e4036780_720w-20240215202425-j136uq6.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-s9zvq6e","Type":"NodeParagraph","Properties":{"id":"20240215202127-s9zvq6e","updated":"20240215202414"},"Children":[{"Type":"NodeText","Data":"当收到之前发送的数据 32、"},{"Type":"NodeTextMark","Properties":{"style":"font-size: 16px;"},"TextMarkType":"sub text","TextMarkTextContent":"36 字节的 ACK 确认应答后，如果发送窗口的大小没有变化，则"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"font-size: 16px;\"}"},{"Type":"NodeTextMark","Properties":{"style":"font-size: 16px;"},"TextMarkType":"sub strong text","TextMarkTextContent":"滑动窗口往右边移动 5 个字节，因为有 5 个字节的数据被确认应答，接下来 52"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"font-size: 16px;\"}"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"style":"font-size: 16px;"},"TextMarkType":"sub text","TextMarkTextContent":"56 字节又变成了可用窗口，那么后续也就可以发送 52~56 这 5 个字节的数据了"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"font-size: 16px;\"}"},{"Type":"NodeTextMark","TextMarkType":"sub","TextMarkTextContent":"："},{"Type":"NodeText","Data":"56 字节又变成了可用窗口，那么后续也就可以发送 52~56 这 5 个字节的数据了："}]},{"ID":"20240215202127-p7m5b8k","Type":"NodeParagraph","Properties":{"id":"20240215202127-p7m5b8k","updated":"20240215204210"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-39a7d12b162a03dd1be2fc554d4e02d2_720w-20240215202425-e5bcisd.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-w22wjdv","Type":"NodeParagraph","Properties":{"id":"20240215202127-w22wjdv","updated":"20240215202127"},"Children":[{"Type":"NodeTextMark","TextMarkType":"sub strong","TextMarkTextContent":"③ 接收方的滑动窗口"}]},{"ID":"20240215202127-s46hhjj","Type":"NodeParagraph","Properties":{"id":"20240215202127-s46hhjj","updated":"20240215202312"},"Children":[{"Type":"NodeText","Data":"接收方的滑动窗口可分为三个部分："}]},{"ID":"20240215202127-t7zqwg6","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-t7zqwg6","updated":"20240215202308"},"Children":[{"ID":"20240215202127-tv6nn59","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-tv6nn59","updated":"20240215202308"},"Children":[{"ID":"20240215202127-5m1xe1z","Type":"NodeParagraph","Properties":{"id":"20240215202127-5m1xe1z","updated":"20240215202308"},"Children":[{"Type":"NodeText","Data":"已成功接收并确认的数据"}]}]},{"ID":"20240215202127-0mj9x2d","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-0mj9x2d","updated":"20240215202307"},"Children":[{"ID":"20240215202127-qmhzkwu","Type":"NodeParagraph","Properties":{"id":"20240215202127-qmhzkwu","updated":"20240215202307"},"Children":[{"Type":"NodeText","Data":"未收到数据但可以接收的数据"}]}]},{"ID":"20240215202127-uuzfkax","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-uuzfkax","updated":"20240215202304"},"Children":[{"ID":"20240215202127-awt5zfp","Type":"NodeParagraph","Properties":{"id":"20240215202127-awt5zfp","updated":"20240215202304"},"Children":[{"Type":"NodeText","Data":"未收到数据且不可以接收的数据（超出接收方窗口大小）"}]}]}]},{"ID":"20240215202127-tks3qfn","Type":"NodeParagraph","Properties":{"id":"20240215202127-tks3qfn","updated":"20240215204238"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-48652862eeff25d1f86b51560a6fbc18_720w-20240215202425-th6fayl.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-qojl5yu","Type":"NodeParagraph","Properties":{"id":"20240215202127-qojl5yu","updated":"20240215202302"},"Children":[{"Type":"NodeText","Data":"同样的，接收方的滑动窗口在成功接收并确认的数据后，窗口右移。"}]},{"ID":"20240215202127-3sks3uv","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-3sks3uv","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"5. 流量控制"}]},{"ID":"20240215202127-ykoc893","Type":"NodeParagraph","Properties":{"id":"20240215202127-ykoc893","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"想象一下这个场景：主机 A 一直向主机 B 发送数据，不考虑主机 B 的接收能力，则可能导致主机 B 的接收缓冲区满了而无法再接收数据，从而导致大量的数据丢包，引发重传机制。而在重传的过程中，若主机 B 的接收缓冲区情况仍未好转，则会将大量的时间浪费在重传数据上，降低传送数据的效率。"}]},{"ID":"20240215202127-4hrlo8x","Type":"NodeParagraph","Properties":{"id":"20240215202127-4hrlo8x","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"所以引入了流量控制机制，主机 B 通过告诉主机 A 自己接收缓冲区的大小，来使主机 A 控制发送的数据量。总结来说：所谓流量控制就是控制发送方发送速率，保证接收方来得及接收。"}]},{"ID":"20240215202127-d0c38y1","Type":"NodeParagraph","Properties":{"id":"20240215202127-d0c38y1","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"TCP 实现流量控制主要就是通过 滑动窗口协议。"}]},{"ID":"20240215202127-mdfh3s3","Type":"NodeParagraph","Properties":{"id":"20240215202127-mdfh3s3","updated":"20240215204352"},"Children":[{"Type":"NodeText","Data":"上文我们提到了滑动窗口大小，但是没说窗口大小在哪里设置，其实这个和 TCP 报文首部中的 窗口大小 Window 字段有关。回顾一下上篇文章 关于 TCP 三次握手和四次挥手，"},{"Type":"NodeTextMark","TextMarkType":"block-ref","TextMarkBlockRefID":"20240215195611-hxtdqto","TextMarkBlockRefSubtype":"d","TextMarkTextContent":"“三次握手，四次挥手”你真的懂吗？"},{"Type":"NodeText","Data":"在此 中讲过的 TCP 报文的首部格式，其中就有一个 16 位的 窗口大小 Window 字段："}]},{"ID":"20240215202127-qyqfywa","Type":"NodeParagraph","Properties":{"id":"20240215202127-qyqfywa","updated":"20240215204408"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-c1275347edfb9ebe586d3355195f8c5c_720w-20240215202425-365k994.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-17f06v8","Type":"NodeParagraph","Properties":{"id":"20240215202127-17f06v8","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"该字段的含义是指自己接收缓冲区的剩余大小，于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。"}]},{"ID":"20240215202127-k449dt4","Type":"NodeParagraph","Properties":{"id":"20240215202127-k449dt4","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"所以，通常来说窗口大小是由接收方来决定的。"}]},{"ID":"20240215202127-35t5786","Type":"NodeParagraph","Properties":{"id":"20240215202127-35t5786","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"这段话大家一定要理解哦：接收端会在发送 ACK 确认应答报文时，将自己的即时窗口大小（接收窗口 rwnd）填入，并跟随 ACK 报文一起发送出去。而发送方根据接收到的 ACK 报文中的窗口大小的值改变自己的发送速度。如果接收到窗口大小的值为 0，那么发送方将停止发送数据。并定期地向接收端发送窗口探测数据段，提醒接收端把窗口大小告诉发送端。"}]},{"ID":"20240215202127-13islev","Type":"NodeParagraph","Properties":{"id":"20240215202127-13islev","updated":"20240215202300"},"Children":[{"Type":"NodeText","Data":"一图胜前言："}]},{"ID":"20240215202127-jxxapz6","Type":"NodeParagraph","Properties":{"id":"20240215202127-jxxapz6","updated":"20240215204439"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-801bb5387cd334d366a1a961855ab599_720w-20240215202426-g1xesgv.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-l3q28h1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240215202127-l3q28h1","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"6. 拥塞控制"}]},{"ID":"20240215202127-wlng0sk","Type":"NodeBlockquote","Properties":{"id":"20240215202127-wlng0sk","updated":"20240215202237"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240215202127-ol00ww9","Type":"NodeParagraph","Properties":{"id":"20240215202127-ol00ww9","updated":"20240215202237"},"Children":[{"Type":"NodeText","Data":"该小节图片均来自公众号：小林 Coding"}]}]},{"ID":"20240215204539-zkrf2q9","Type":"NodeParagraph","Properties":{"id":"20240215204539-zkrf2q9","updated":"20240215204541"},"Children":[{"Type":"NodeTextMark","Properties":{"style":"font-size: 16px;"},"TextMarkType":"sub text","TextMarkTextContent":"所谓拥塞就是说：在某段时间，对网络中某一资源的需求超过了该资源所能提供的可用部分（即 需大于供)，网络的性能变差"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"font-size: 16px;\"}"},{"Type":"NodeText","Data":"资源的需求超过了该资源所能提供的可用部分（即 需大于供)，网络的性能变差。"}]},{"ID":"20240215202127-ha8im1w","Type":"NodeParagraph","Properties":{"id":"20240215202127-ha8im1w","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"如果网络出现拥塞，TCP 报文可能会大量丢失，此时就会大量触发重传机制，从而导致网络拥塞程度更高，严重影响传输。"}]},{"ID":"20240215202127-116awqo","Type":"NodeBlockquote","Properties":{"id":"20240215202127-116awqo","updated":"20240215202239"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20240215202127-31jyy99","Type":"NodeParagraph","Properties":{"id":"20240215202127-31jyy99","updated":"20240215202230"},"Children":[{"Type":"NodeText","Data":"其实只要「发送方」没有在规定时间内接收到 ACK 应答报文，也就是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"触发了重传机制，就会认为网络出现了拥塞。"}]}]},{"ID":"20240215202127-ofz8ujy","Type":"NodeParagraph","Properties":{"id":"20240215202127-ofz8ujy","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"因此当出现拥塞时，应当控制发送方的速率。这一点和流量控制很像，但是出发点不同。"}]},{"ID":"20240215202127-gje2qn6","Type":"NodeParagraph","Properties":{"id":"20240215202127-gje2qn6","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"流量控制是为了让接收方能来得及接收，而拥塞控制是为了降低整个网络的拥塞程度，防止过多的数据注入到网络中。"}]},{"ID":"20240215202127-0x6ywi5","Type":"NodeParagraph","Properties":{"id":"20240215202127-0x6ywi5","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"为了调节发送方所要发送数据的量，定义了「拥塞窗口 cwnd」的概念。拥塞窗口是发送方维护的一个状态变量，它会根据网络的拥塞程度动态变化："}]},{"ID":"20240215202127-tsckjiv","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-tsckjiv","updated":"20240215202239"},"Children":[{"ID":"20240215202127-uxizxn9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-uxizxn9","updated":"20240215202209"},"Children":[{"ID":"20240215202127-ywo9v1v","Type":"NodeParagraph","Properties":{"id":"20240215202127-ywo9v1v","updated":"20240215202209"},"Children":[{"Type":"NodeText","Data":"只要网络中出现了拥塞，cwnd 就会减少"}]}]},{"ID":"20240215202127-ddhyhu2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-ddhyhu2","updated":"20240215202211"},"Children":[{"ID":"20240215202127-djdzaoc","Type":"NodeParagraph","Properties":{"id":"20240215202127-djdzaoc","updated":"20240215202211"},"Children":[{"Type":"NodeText","Data":"若网络中没有出现拥塞，cwnd 就会增大"}]}]}]},{"ID":"20240215202127-60rdxny","Type":"NodeParagraph","Properties":{"id":"20240215202127-60rdxny","updated":"20240215204653"},"Children":[{"Type":"NodeText","Data":"在引入拥塞窗口概念之前，发送窗口大小和接收窗口大小基本是相等的关系（取决于接收窗口大小）。引入拥塞窗口后，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"发送窗口的大小就等于拥塞窗口和接收窗口的最小值。"}]},{"ID":"20240215202127-0jln9mp","Type":"NodeParagraph","Properties":{"id":"20240215202127-0jln9mp","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"TCP 的拥塞控制采用了四种算法："}]},{"ID":"20240215202127-0cu4xkk","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-0cu4xkk","updated":"20240215202239"},"Children":[{"ID":"20240215202127-bj1giem","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-bj1giem","updated":"20240215202203"},"Children":[{"ID":"20240215202127-574k18t","Type":"NodeParagraph","Properties":{"id":"20240215202127-574k18t","updated":"20240215202203"},"Children":[{"Type":"NodeText","Data":"慢开始"}]}]},{"ID":"20240215202127-b8wdj9f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-b8wdj9f","updated":"20240215202202"},"Children":[{"ID":"20240215202127-2vhaimb","Type":"NodeParagraph","Properties":{"id":"20240215202127-2vhaimb","updated":"20240215202202"},"Children":[{"Type":"NodeText","Data":"拥塞避免"}]}]},{"ID":"20240215202127-jas4qa6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-jas4qa6","updated":"20240215202201"},"Children":[{"ID":"20240215202127-j5q7a8a","Type":"NodeParagraph","Properties":{"id":"20240215202127-j5q7a8a","updated":"20240215202201"},"Children":[{"Type":"NodeText","Data":"快重传"}]}]},{"ID":"20240215202127-5hy5liq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-5hy5liq","updated":"20240215202200"},"Children":[{"ID":"20240215202127-pk3to4k","Type":"NodeParagraph","Properties":{"id":"20240215202127-pk3to4k","updated":"20240215202200"},"Children":[{"Type":"NodeText","Data":"快恢复"}]}]}]},{"ID":"20240215202127-mvexqix","Type":"NodeParagraph","Properties":{"id":"20240215202127-mvexqix","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"下面详细讲解这四种算法"}]},{"ID":"20240215202127-nwl1n4b","Type":"NodeParagraph","Properties":{"id":"20240215202127-nwl1n4b","updated":"20240215202239"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"① 慢开始"}]},{"ID":"20240215202127-1sbv3lj","Type":"NodeParagraph","Properties":{"id":"20240215202127-1sbv3lj","updated":"20240215202239"},"Children":[{"Type":"NodeText","Data":"慢开始的思路就是：TCP 在刚建立连接完成后，如果立即把大量数据字节注入到网络，那么很有可能引起网络阻塞。好的方法是先探测一下，一点一点地提高发送数据包的数量，即由小到大逐渐增大拥塞窗口数值。cwnd 初始值为 1，每经过一个传播轮次，cwnd 加倍（指数增长）。"}]},{"ID":"20240215202127-vwovm4a","Type":"NodeParagraph","Properties":{"id":"20240215202127-vwovm4a","updated":"20240215204658"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-ca4ad54df31db6fec7fd58457dba3382_720w-20240215202426-ik5hnoc.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-htq5vxk","Type":"NodeParagraph","Properties":{"id":"20240215202127-htq5vxk","updated":"20240215204709"},"Children":[{"Type":"NodeText","Data":"当然不能一直执行慢启动，这里会设置一个慢启动轮限 ssthresh 状态变量："}]},{"ID":"20240215202127-xqjkbuw","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-xqjkbuw","updated":"20240215204717"},"Children":[{"ID":"20240215202127-dc7zmuh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-dc7zmuh","updated":"20240215204714"},"Children":[{"ID":"20240215202127-s6huxnw","Type":"NodeParagraph","Properties":{"id":"20240215202127-s6huxnw","updated":"20240215204714"},"Children":[{"Type":"NodeText","Data":"当 cwnd \u003c ssthresh 时，继续使用慢启动算法"}]}]},{"ID":"20240215202127-vvrfdsr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-vvrfdsr","updated":"20240215204717"},"Children":[{"ID":"20240215202127-b55s5ai","Type":"NodeParagraph","Properties":{"id":"20240215202127-b55s5ai","updated":"20240215204717"},"Children":[{"Type":"NodeText","Data":"当 cwnd \u003e= ssthresh 时，开始使用「拥塞避免算法」"}]}]}]},{"ID":"20240215202127-i3xhakl","Type":"NodeParagraph","Properties":{"id":"20240215202127-i3xhakl","updated":"20240215202239"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"② 拥塞避免"}]},{"ID":"20240215202127-wv11p61","Type":"NodeParagraph","Properties":{"id":"20240215202127-wv11p61","updated":"20240215204725"},"Children":[{"Type":"NodeText","Data":"拥塞避免算法的思路是让拥塞窗口 cwnd 缓慢增大，即每经过一个往返时间 cwnd 加 1。"}]},{"ID":"20240215202127-qkqytur","Type":"NodeParagraph","Properties":{"id":"20240215202127-qkqytur","updated":"20240215204805"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-bd8680ba88931bfbe8b89169b09cc605_720w-20240215202426-fld7ugv.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-i47eqky","Type":"NodeParagraph","Properties":{"id":"20240215202127-i47eqky","updated":"20240215204734"},"Children":[{"Type":"NodeText","Data":"注意，无论是慢开始阶段还是拥塞避免，只要出现了网络拥塞（触发超时重传机制），慢开始轮限 sshresh 和 拥塞窗口大小 cwnd 的值会发生变化（乘法减小）："}]},{"ID":"20240215202127-qu7avpv","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-qu7avpv","updated":"20240215204744"},"Children":[{"ID":"20240215202127-ltkj53h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-ltkj53h","updated":"20240215204741"},"Children":[{"ID":"20240215202127-0mie955","Type":"NodeParagraph","Properties":{"id":"20240215202127-0mie955","updated":"20240215204741"},"Children":[{"Type":"NodeText","Data":"ssthresh 设为 cwnd/2"}]}]},{"ID":"20240215202127-sla18pr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-sla18pr","updated":"20240215204744"},"Children":[{"ID":"20240215202127-g2x7854","Type":"NodeParagraph","Properties":{"id":"20240215202127-g2x7854","updated":"20240215204744"},"Children":[{"Type":"NodeText","Data":"cwnd 重置为 1"}]}]}]},{"ID":"20240215202127-7ms2diz","Type":"NodeParagraph","Properties":{"id":"20240215202127-7ms2diz","updated":"20240215204755"},"Children":[{"Type":"NodeText","Data":"由于拥塞窗口大小重置为 1 了，所以就会重新开始执行慢启动算法。"}]},{"ID":"20240215202127-xctkray","Type":"NodeParagraph","Properties":{"id":"20240215202127-xctkray","updated":"20240215204758"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-742a4947b97ea6deb89d58f69d2f8810_720w-20240215202426-sn5jjdb.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240215202127-mi788y4","Type":"NodeParagraph","Properties":{"id":"20240215202127-mi788y4","updated":"20240215202239"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"③ 快重传和快恢复"}]},{"ID":"20240215202127-1xl2lcs","Type":"NodeParagraph","Properties":{"id":"20240215202127-1xl2lcs","updated":"20240215204814"},"Children":[{"Type":"NodeText","Data":"快速重传和快速恢复算法一般同时使用。"}]},{"ID":"20240215202127-osnsxcy","Type":"NodeParagraph","Properties":{"id":"20240215202127-osnsxcy","updated":"20240215204816"},"Children":[{"Type":"NodeText","Data":"当触发快速重传机制，即接收方收到三个重复的 ACK 确认的时候，就会执行快重传算法（触发快速重传机制和超时重传机制的情况不同，TCP 认为触发快速重传的情况并不严重，因为大部分没丢，只丢了一小部分），快速重传做的事情有："}]},{"ID":"20240215202127-vb8a31w","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-vb8a31w","updated":"20240215204839"},"Children":[{"ID":"20240215202127-qivotju","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-qivotju","updated":"20240215204833"},"Children":[{"ID":"20240215202127-n15ylch","Type":"NodeParagraph","Properties":{"id":"20240215202127-n15ylch","updated":"20240215204833"},"Children":[{"Type":"NodeText","Data":"cwnd = cwnd/2"}]}]},{"ID":"20240215202127-fn726qi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-fn726qi","updated":"20240215204834"},"Children":[{"ID":"20240215202127-fmb2gzq","Type":"NodeParagraph","Properties":{"id":"20240215202127-fmb2gzq","updated":"20240215204834"},"Children":[{"Type":"NodeText","Data":"ssthresh = cwnd"}]}]},{"ID":"20240215202127-58ony9p","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-58ony9p","updated":"20240215204839"},"Children":[{"ID":"20240215202127-xq9vsva","Type":"NodeParagraph","Properties":{"id":"20240215202127-xq9vsva","updated":"20240215204839"},"Children":[{"Type":"NodeText","Data":"重新进入拥塞避免阶段"}]}]}]},{"ID":"20240215202127-zkdt5u3","Type":"NodeParagraph","Properties":{"id":"20240215202127-zkdt5u3","updated":"20240215204844"},"Children":[{"Type":"NodeText","Data":"后来的 “快速恢复” 算法是在上述的“快速重传”算法后添加的，当收到 3 个重复ACK时，TCP 最后进入的不是拥塞避免阶段，而是快速恢复阶段。"}]},{"ID":"20240215202127-js0zuay","Type":"NodeParagraph","Properties":{"id":"20240215202127-js0zuay","updated":"20240215204910"},"Children":[{"Type":"NodeText","Data":"快速恢复的思想是“"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数据包守恒"},{"Type":"NodeText","Data":"”原则，即同一个时刻在网络中的数据包数量是恒定的，只有当“老”数据包离开了网络后，才能向网络中发送一 个“新”的数据包，如果发送方收到一个重复的 ACK，那么根据 TCP 的 ACK 机制就表明有一个数据包离开了网络，于是 cwnd 加 1。如果能够严格按照该原则那么网络中很少会发生拥塞，事实上拥塞控制的目的也就在修正违反该原则的地方。"}]},{"ID":"20240215202127-5io5gkh","Type":"NodeParagraph","Properties":{"id":"20240215202127-5io5gkh","updated":"20240215204929"},"Children":[{"Type":"NodeText","Data":"具体来说快速恢复的主要步骤是："}]},{"ID":"20240215202127-bia4hz2","Type":"NodeList","ListData":{},"Properties":{"id":"20240215202127-bia4hz2","updated":"20240215204946"},"Children":[{"ID":"20240215202127-nl2ak1r","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-nl2ak1r","updated":"20240215204932"},"Children":[{"ID":"20240215202127-30zdwa7","Type":"NodeParagraph","Properties":{"id":"20240215202127-30zdwa7","updated":"20240215204932"},"Children":[{"Type":"NodeText","Data":"把 cwnd 设置为 ssthresh 的值加 3，然后重传丢失的报文段，加 3 的原因是因为收到 3 个重复的 ACK，表明有 3 个“老”的数据包离开了网络。"}]}]},{"ID":"20240215202127-9gkg22n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-9gkg22n","updated":"20240215204939"},"Children":[{"ID":"20240215202127-lp4woh0","Type":"NodeParagraph","Properties":{"id":"20240215202127-lp4woh0","updated":"20240215204939"},"Children":[{"Type":"NodeText","Data":"再收到重复的 ACK 时，拥塞窗口 cwnd 增加 1"}]}]},{"ID":"20240215202127-9io22bw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240215202127-9io22bw","updated":"20240215204946"},"Children":[{"ID":"20240215202127-k8m371b","Type":"NodeParagraph","Properties":{"id":"20240215202127-k8m371b","updated":"20240215204946"},"Children":[{"Type":"NodeText","Data":"当收到新的数据包的 ACK 时，把 cwnd 设置为第一步中的 ssthresh 的值。原因是因为该 ACK 确认了新的数据，说明从重复 ACK 时的数据都已收到，该恢复过程已经结束，可以回到恢复之前的状态了，也即再次进入拥塞避免状态。"}]}]}]},{"ID":"20240215202127-gq3ue41","Type":"NodeParagraph","Properties":{"id":"20240215202127-gq3ue41","updated":"20240215205001"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-2b7564e5af3e189a137d50125231f50c_720w-20240215202426-yatg700.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]}]}