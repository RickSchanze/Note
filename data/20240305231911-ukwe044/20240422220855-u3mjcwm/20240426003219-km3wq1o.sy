{"ID":"20240426003219-km3wq1o","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240426003219-km3wq1o","title":"Unity Shader 点阵像素剔除半透（Stipple Transparency ）","type":"doc","updated":"20240426003628"},"Children":[{"ID":"20240426003248-ikkrux0","Type":"NodeParagraph","Properties":{"id":"20240426003248-ikkrux0","updated":"20240426003253"},"Children":[{"Type":"NodeText","Data":"原链："},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/92955281","TextMarkTextContent":"Unity Shader 点阵像素剔除半透（Stipple Transparency ） - 知乎 (zhihu.com)"}]},{"ID":"20240426003236-8a74vt0","Type":"NodeParagraph","Properties":{"id":"20240426003236-8a74vt0","updated":"20240426003239"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-37414ecbd002edcb4436927e65f55443_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-37414ecbd002edcb4436927e65f55443_1440w-20240426003653-9nbs7ll.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240426003236-tkqxcbk","Type":"NodeParagraph","Properties":{"id":"20240426003236-tkqxcbk","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"最近一段时间一直不停的刷只狼（打铁真好玩.......），无意中发现主角被场景物体遮挡的时候，半透效果比较有意思，是像马赛克一样被剔除掉了。"}]},{"ID":"20240426003236-v6m14tf","Type":"NodeParagraph","Properties":{"id":"20240426003236-v6m14tf","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"上图是我在游戏里截的，在上传以后被压缩了 所以有点糊，但应该还是能辨别出来，摄像机前面是有一棵树的，在遮挡住主角后变成半透了，并且透明的方式并不是传统的半透，而是像扣掉了像素一样的马赛克形状。"}]},{"ID":"20240426003236-0y040wm","Type":"NodeParagraph","Properties":{"id":"20240426003236-0y040wm","updated":"20240426003259"},"Children":[{"Type":"NodeImage","Data":"span","Properties":{"parent-style":"display: block;"},"Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"动图封面"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-272254e5bd88b197c89f0375c04ad823_b-20240426003653-ggdqacz.jpg"},{"Type":"NodeCloseParen"}]},{"Type":"NodeKramdownSpanIAL","Data":"{: parent-style=\"display: block;\"}"}]},{"ID":"20240426003236-qvzddp7","Type":"NodeParagraph","Properties":{"id":"20240426003236-qvzddp7","updated":"20240426003416"},"Children":[{"Type":"NodeText","Data":"之前一个朋友问过我这个效果，我从网上搜了下，发现还是有很多资料的，具体来自于这"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://ocias.com/blog/unity-stipple-transparency-shader/","TextMarkTextContent":"Unity Stipple Transparency Shader - Alex Ocias Blog"}]},{"ID":"20240426003236-8ic35dt","Type":"NodeParagraph","Properties":{"id":"20240426003236-8ic35dt","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"文章里写的还是很详细的，这个技术其实非常古老了，在过去硬件性能很差的时候，很多半透效果无法实现，毕竟这种混合算法要把前后层都渲一遍然后做算法融合，并且还有万恶的排序问题。所以很快就有人想出了这种利用像素剔除的方式来模拟半透效果，性能开销要好很多，并且因为不需要融合，所以不会出现排序问题。"}]},{"ID":"20240426003236-5a1pq92","Type":"NodeParagraph","Properties":{"id":"20240426003236-5a1pq92","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"下面是重点代码，其实很简单，就是先设定了一个4*4的矩阵来作为阈值，利用x轴采样这个阈值，小于这个阈值的像素将被剔除掉，_RowAccess 是一个单位矩阵，用来定义Y轴的采样，_Transparency 这个属性就是用来控制透明度的级别，根据这个透明度去采样阈值。"}]},{"ID":"20240426003236-d6pcv0w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240426003236-d6pcv0w","updated":"20240426003236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA=="},{"Type":"NodeCodeBlockCode","Data":"    // Screen-door transparency: Discard pixel if below threshold.\n    float4x4 thresholdMatrix =\n    {  1.0 / 17.0,  9.0 / 17.0,  3.0 / 17.0, 11.0 / 17.0,\n      13.0 / 17.0,  5.0 / 17.0, 15.0 / 17.0,  7.0 / 17.0,\n       4.0 / 17.0, 12.0 / 17.0,  2.0 / 17.0, 10.0 / 17.0,\n      16.0 / 17.0,  8.0 / 17.0, 14.0 / 17.0,  6.0 / 17.0\n    };\n    float4x4 _RowAccess = { 1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1 };\n    float2 pos = IN.screenPos.xy / IN.screenPos.w;\n    pos *= _ScreenParams.xy; // pixel position\n    clip(_Transparency - thresholdMatrix[fmod(pos.x, 4)] * _RowAccess[fmod(pos.y, 4)]);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240426003236-r0lzrol","Type":"NodeParagraph","Properties":{"id":"20240426003236-r0lzrol","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"说到性能这方面，这个做法在手机上的表现可能并不突出，因为手机上alphatest的开销是要高于alphablend的，所以如果手机想用这种效果，还是根据对这种像素风格的需求来定吧。"}]},{"ID":"20240426003236-ig6dbyn","Type":"NodeParagraph","Properties":{"id":"20240426003236-ig6dbyn","updated":"20240426003236"},"Children":[{"Type":"NodeText","Data":"这里只有一个shader，就不做工程文件了，如果上面的网站进不去，就直接用下面的完整代码。"}]},{"ID":"20240426003236-gbjgber","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20240426003236-gbjgber","updated":"20240426003236"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dGV4dA=="},{"Type":"NodeCodeBlockCode","Data":"Shader \"Ocias/Diffuse (Stipple Transparency)\" {\nProperties {\n    _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n    _Transparency (\"Transparency\", Range(0,1)) = 1.0\n}\nSubShader {\n    Tags { \"RenderType\"=\"Opaque\" }\n    LOD 150\nCGPROGRAM\n#pragma surface surf Lambert noforwardadd\nsampler2D _MainTex;\nstruct Input {\n    float2 uv_MainTex;\n    float4 screenPos;\n};\nhalf _Transparency;\nvoid surf (Input IN, inout SurfaceOutput o) {\n    fixed4 c = tex2D(_MainTex, IN.uv_MainTex);\n    o.Albedo = c.rgb;\n    o.Alpha = c.a;\n    // Screen-door transparency: Discard pixel if below threshold.\n    float4x4 thresholdMatrix =\n    {  1.0 / 17.0,  9.0 / 17.0,  3.0 / 17.0, 11.0 / 17.0,\n      13.0 / 17.0,  5.0 / 17.0, 15.0 / 17.0,  7.0 / 17.0,\n       4.0 / 17.0, 12.0 / 17.0,  2.0 / 17.0, 10.0 / 17.0,\n      16.0 / 17.0,  8.0 / 17.0, 14.0 / 17.0,  6.0 / 17.0\n    };\n    float4x4 _RowAccess = { 1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1 };\n    float2 pos = IN.screenPos.xy / IN.screenPos.w;\n    pos *= _ScreenParams.xy; // pixel position\n    clip(_Transparency - thresholdMatrix[fmod(pos.x, 4)] * _RowAccess[fmod(pos.y, 4)]);\n}\nENDCG\n}\nFallback \"Mobile/VertexLit\"\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20240426003628-1dyeaj8","Type":"NodeParagraph","Properties":{"id":"20240426003628-1dyeaj8"}}]}