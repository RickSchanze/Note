{"ID":"20240510221620-7hldw2l","Spec":"1","Type":"NodeDocument","Properties":{"id":"20240510221620-7hldw2l","title":"UE426终于实现了Alpha to Coverage","type":"doc","updated":"20240510221639"},"Children":[{"ID":"20240510221621-vv04147","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-vv04147","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"一.UE426的Alpha to Coverage"}]},{"ID":"20240510221621-pnzstoc","Type":"NodeParagraph","Properties":{"id":"20240510221621-pnzstoc","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"Alpha to Coverage(本文后面将其简称为A2C)是个很老的技术了，UE4居然直到4.26版本才实现了相关功能，令人有点惊讶。"}]},{"ID":"20240510221621-ah6a3z5","Type":"NodeParagraph","Properties":{"id":"20240510221621-ah6a3z5","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"具体用法，在材质球的属性里面勾上下图的这个flag就激活了这个功能。这个flag放到了Mobile这个分类下, 让人也挺迷惑的。"}]},{"ID":"20240510221621-ej6z8on","Type":"NodeParagraph","Properties":{"id":"20240510221621-ej6z8on","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-610f300a9ebc395fc90f31cc6584c9ea_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-610f300a9ebc395fc90f31cc6584c9ea_1440w-20240510221633-s7n72vi.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-icnuvf1","Type":"NodeParagraph","Properties":{"id":"20240510221621-icnuvf1","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"勾了这个之后，UE4做了两件事情。"}]},{"ID":"20240510221621-yvklb2e","Type":"NodeParagraph","Properties":{"id":"20240510221621-yvklb2e","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"（1）打开了shader里面的一个宏："},{"Type":"NodeTextMark","TextMarkType":"em","TextMarkTextContent":"MATERIAL_USE_ALPHA_TO_COVERAGE"},{"Type":"NodeText","Data":"，会激活一段代码，这段代码是对效果的一个优化，后面文章会讲。"}]},{"ID":"20240510221621-jabmrjg","Type":"NodeParagraph","Properties":{"id":"20240510221621-jabmrjg","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"half MaterialOpacityMask = GetMaterialMaskInputRaw(PixelMaterialInputs);"}]},{"ID":"20240510221621-m4iklt9","Type":"NodeParagraph","Properties":{"id":"20240510221621-m4iklt9","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"OutColor.a = GetMaterialMask(PixelMaterialInputs) / max(abs(ddx(MaterialOpacityMask)) + abs(ddy(MaterialOpacityMask)), 0.0001f) + 0.5f;"}]},{"ID":"20240510221621-3l2z25y","Type":"NodeParagraph","Properties":{"id":"20240510221621-3l2z25y","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"（2）设置RenderState状态中的bUseAlphaToCoverage为true，这个是为了激活渲染API的相关功能。"}]},{"ID":"20240510221621-xt9s1p2","Type":"NodeParagraph","Properties":{"id":"20240510221621-xt9s1p2","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"下面就简单介绍下这个技术。"}]},{"ID":"20240510221621-u0t4xzx","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-u0t4xzx","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"二. A2C要解决的问题"}]},{"ID":"20240510221621-wr9zbp3","Type":"NodeParagraph","Properties":{"id":"20240510221621-wr9zbp3","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"某些情况下, 使用Mask材质(Alpha Test), 从性能和效果角度, 比Translusent材质(Alpha Blend)更好, 例如画叶子和草.。"}]},{"ID":"20240510221621-acdnin3","Type":"NodeParagraph","Properties":{"id":"20240510221621-acdnin3","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Alpha Test的好处"}]},{"ID":"20240510221621-lft6qn6","Type":"NodeList","ListData":{},"Properties":{"id":"20240510221621-lft6qn6","updated":"20240510221622"},"Children":[{"ID":"20240510221621-q0kzzfr","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240510221621-q0kzzfr","updated":"20240510221621"},"Children":[{"ID":"20240510221621-5brdtmc","Type":"NodeParagraph","Properties":{"id":"20240510221621-5brdtmc","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"不开blending， 可以做pre Z减少overdraw"}]}]},{"ID":"20240510221621-bhphfiv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240510221621-bhphfiv","updated":"20240510221621"},"Children":[{"ID":"20240510221621-env73ou","Type":"NodeParagraph","Properties":{"id":"20240510221621-env73ou","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"不用像alpha blend一样需要考虑排序的问题（例如画hair）"}]}]}]},{"ID":"20240510221621-loseta0","Type":"NodeParagraph","Properties":{"id":"20240510221621-loseta0","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Alpha Test的问题"}]},{"ID":"20240510221621-pwdqpor","Type":"NodeList","ListData":{},"Properties":{"id":"20240510221621-pwdqpor","updated":"20240510221622"},"Children":[{"ID":"20240510221621-11bgvwm","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240510221621-11bgvwm","updated":"20240510221621"},"Children":[{"ID":"20240510221621-q1edq31","Type":"NodeParagraph","Properties":{"id":"20240510221621-q1edq31","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"Aliasing很严重，很容易看到闪烁（alpha blend就会很柔和，尤其边缘）"}]}]}]},{"ID":"20240510221621-0s96fjq","Type":"NodeParagraph","Properties":{"id":"20240510221621-0s96fjq","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"动图封面"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-6347fcdff9dc3d13033ffe6fae2cf8c3_b-20240510221633-0nvffj3.jpg"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-o2yss66","Type":"NodeList","ListData":{},"Properties":{"id":"20240510221621-o2yss66","updated":"20240510221622"},"Children":[{"ID":"20240510221621-h9fldoj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20240510221621-h9fldoj","updated":"20240510221621"},"Children":[{"ID":"20240510221621-8vf1f37","Type":"NodeParagraph","Properties":{"id":"20240510221621-8vf1f37","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"使用低分辨率的mipmap level渲染的时候效果会比较差(比如远处的铁丝网\"断\"了，树“秃”了)"}]}]}]},{"ID":"20240510221621-0ibz2b9","Type":"NodeParagraph","Properties":{"id":"20240510221621-0ibz2b9","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-301b8f317533ee4f2db653caa445f9ce_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-301b8f317533ee4f2db653caa445f9ce_1440w-20240510221633-qziw9s3.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-7fupkie","Type":"NodeParagraph","Properties":{"id":"20240510221621-7fupkie","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"动图"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-a95979bba2210010bfd8dd234acecf81_b-20240510221634-cl5liy2.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-x6jnxse","Type":"NodeParagraph","Properties":{"id":"20240510221621-x6jnxse","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"A2C技术就是要解决Alpha Test的这些问题。"}]},{"ID":"20240510221621-oowm5ds","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-oowm5ds","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"三. A2C原理介绍"}]},{"ID":"20240510221621-zper2yn","Type":"NodeParagraph","Properties":{"id":"20240510221621-zper2yn","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"A2C只有在MSAA开启的时候生效。要开启该功能，使用OpengGL和DX的情况下都只需要设置一个render state flag。"}]},{"ID":"20240510221621-bsorh3z","Type":"NodeParagraph","Properties":{"id":"20240510221621-bsorh3z","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"首先，不可避免的，需要简单介绍下MSAA。"}]},{"ID":"20240510221621-f1l0ge7","Type":"NodeParagraph","Properties":{"id":"20240510221621-f1l0ge7","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"MSAA开启后，每个pixel会对应多个sample，光栅化阶段会基于这些sample的位置，去计算图元（例如三角形）的coverage情况，也就是计算当前图元覆盖了哪些sample。只有那些被覆盖了的sample的颜色，才会被更新为当前图元的颜色(shading的结果）。画完所有图元之后，最终每个pixel的颜色，是它对应的所有sample的颜色的平均值。基于这些规则，一个结果便是：如果一个Pixel的一部分sample被图元A覆盖，另一部分sample被图元B覆盖，那么这个pixel的最终结果是图元A和图元B的颜色的混合。例如下图中的这个pixel，它的4个sample里面，有1个被黄色三角形覆盖，2个被蓝色三角形覆盖，1个未被任何图元覆盖（背景色为白色），于是它最终的结果是一个介于黄色和蓝色之间的颜色。"}]},{"ID":"20240510221621-vyldp9g","Type":"NodeParagraph","Properties":{"id":"20240510221621-vyldp9g","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-5a5ab5f8d4861cb90534ae763ff28e89_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-5a5ab5f8d4861cb90534ae763ff28e89_1440w-20240510221634-4tlhv9o.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-ocj27me","Type":"NodeParagraph","Properties":{"id":"20240510221621-ocj27me","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"一个实际游戏中的效果图如下："}]},{"ID":"20240510221621-cdtowme","Type":"NodeParagraph","Properties":{"id":"20240510221621-cdtowme","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-8358cf3f2c591bcf39a05c1f1312deae_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-8358cf3f2c591bcf39a05c1f1312deae_1440w-20240510221634-0qc69z9.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-bk1ovpy","Type":"NodeParagraph","Properties":{"id":"20240510221621-bk1ovpy","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"MSAA还有很多细节，在这里不展开讲了，网上可以找多很多详细的文档。"}]},{"ID":"20240510221621-3gypmrd","Type":"NodeParagraph","Properties":{"id":"20240510221621-3gypmrd","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"那么A2C带来的影响是什么？"}]},{"ID":"20240510221621-v9ho5s7","Type":"NodeParagraph","Properties":{"id":"20240510221621-v9ho5s7","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"开启A2C之后，在确定哪些sample需要被更新的时候，会额外考虑Alpha值的影响。"}]},{"ID":"20240510221621-c9w4kk1","Type":"NodeParagraph","Properties":{"id":"20240510221621-c9w4kk1","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"从实现上来说，会基于alpha值生成一个coverage mask，去跟原始流程得到的结果(被图元覆盖到的samples)做AND操作；从结果上来说，如果alpha是一个小于1的值，则最终会被更新颜色的sample个数将(可能)会变少（极端情况就是Alpha为0的时候，所有sample都不会被更新）。以下图中画红圈的Pixel为例。绘制的那个三角形覆盖了该pixel里的2个sample，在不开A2C的情况下，这2个sample的颜色都会被更新为这个三角形在这个Pixel的shading颜色，但是如果开了A2C同时alpha值是0.5，则最终这2个被覆盖了的sample大概率只有一个会被更新。这里说“大概率”是因为这个coverage mask的计算，是跟具体硬件实现相关的。"}]},{"ID":"20240510221621-ntubz9q","Type":"NodeParagraph","Properties":{"id":"20240510221621-ntubz9q","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-75990a51aefcbc0f18d4231550249bc1_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-75990a51aefcbc0f18d4231550249bc1_1440w-20240510221634-d3e20tc.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-7b9hl6w","Type":"NodeParagraph","Properties":{"id":"20240510221621-7b9hl6w","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"如果想了解细节，建议阅读下面2个DirectX的官方文档："}]},{"ID":"20240510221621-a8lo2iw","Type":"NodeParagraph","Properties":{"id":"20240510221621-a8lo2iw","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//docs.microsoft.com/en-us/windows/win32/direct3d11/d3d10-graphics-programming-guide-blend-state","TextMarkTextContent":"Configuring Blending Functionality - Win32 apps"}]},{"ID":"20240510221621-icrzesu","Type":"NodeParagraph","Properties":{"id":"20240510221621-icrzesu","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//docs.microsoft.com/en-us/windows/win32/direct3d11/d3d10-graphics-programming-guide-rasterizer-stage-rules%23centroid-sampling-of-attributes-when-multisample-antialiasing","TextMarkTextContent":"Rasterization Rules - Win32 apps"}]},{"ID":"20240510221621-q39rs22","Type":"NodeParagraph","Properties":{"id":"20240510221621-q39rs22","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"总结一下，A2C使得MSAA针对图元边缘做抗锯齿的时候，会基于Alpha去修改图元颜色在一个pixel里面所占的“权重”，从某种程度上来说，是在修改这个图元在这个pixel里的“透明度”，听起来是不是跟Screen Door这个技术有点点类似？对于树叶这类多层mesh会堆叠在一起的情况，A2C可以带来更好的“blending”效果。"}]},{"ID":"20240510221621-qpen1uc","Type":"NodeParagraph","Properties":{"id":"20240510221621-qpen1uc","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"OK，在理解了原理之后，再来看看在实践层面，该技术带来的影响。"}]},{"ID":"20240510221621-babq1hw","Type":"NodeParagraph","Properties":{"id":"20240510221621-babq1hw","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-b94e32c5f4d89bfde7626ef50aff6298_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-b94e32c5f4d89bfde7626ef50aff6298_1440w-20240510221634-7zubooo.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-rhzxcq2","Type":"NodeParagraph","Properties":{"id":"20240510221621-rhzxcq2","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-aa157b87f268e9b8edba7b82d4940d9d_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-aa157b87f268e9b8edba7b82d4940d9d_1440w-20240510221634-64hlhvt.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-c7q0ztm","Type":"NodeParagraph","Properties":{"id":"20240510221621-c7q0ztm","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-f1b46d51109363df01cae8ff650484c5_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-f1b46d51109363df01cae8ff650484c5_1440w-20240510221634-r8m63bo.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-2dgum2t","Type":"NodeParagraph","Properties":{"id":"20240510221621-2dgum2t","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"可以看到，A2C跟Alpha Test相比，有了抗锯齿的效果（不会那么闪了）。但是跟alpha blend相比，叶子边缘看起来“毛茸茸”，仔细看能看出明显的banding，效果上还是差得挺多。"}]},{"ID":"20240510221621-4o5vz7l","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-4o5vz7l","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"四. A2C效果优化"}]},{"ID":"20240510221621-p5i75kr","Type":"NodeParagraph","Properties":{"id":"20240510221621-p5i75kr","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"首先分析下问题的原因"}]},{"ID":"20240510221621-diwwuqv","Type":"NodeParagraph","Properties":{"id":"20240510221621-diwwuqv","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"树叶边缘的透明度，无论是Alpha Blend，还是A2C，都（主要）取决于Alpha。对于Alpha Blend来说，Alpha的渐变对应了边缘透明度的渐变，所以最终效果，基本能还原出美术在Alpha贴图里面做的效果。而对于A2C来说，因为它将一个连续变化的Alpha，映射成了一个离散的阶跃函数（coverage mask），所以结果上来看就是banding。从另外一个角度来看，它实际上是对一个连续的信号做filter，得出来一个效果不好的不连续信号。那么解决方法当然就是要优化这个filter了。"}]},{"ID":"20240510221621-knvuiu1","Type":"NodeParagraph","Properties":{"id":"20240510221621-knvuiu1","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"解决方法"}]},{"ID":"20240510221621-2xxkdwb","Type":"NodeParagraph","Properties":{"id":"20240510221621-2xxkdwb","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"我们要在shader里去优化alpha的filter。既然是做filter，那当然要依赖于相邻像素的信息了，那么很容易就联想到了derivatives相关的函数了。具体做法，参考第一节里面给出的UE4的shader代码。大致的思路，是减少低Alpha的情况，从而减少发生banding的区域。至于说这个filter怎么发明出来，我也没搞懂。"}]},{"ID":"20240510221621-zg4elgt","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-zg4elgt","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"五. 关于Alpha Test的一个补充"}]},{"ID":"20240510221621-eoioidv","Type":"NodeParagraph","Properties":{"id":"20240510221621-eoioidv","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"其实，对于Alpha Test来说，有一个更影响效果的问题，那就是mipmap。"}]},{"ID":"20240510221621-80nmbyj","Type":"NodeParagraph","Properties":{"id":"20240510221621-80nmbyj","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"默认的mipmap生成方法，是做Box Filter，也就是求平均值。对于颜色来说，这么做一般没啥问题。但是Alpha Test的Alpha，不是颜色，而是一个clip阈值。所以问题就很容易理解了。到了低分辨率的mipmap里面，边缘处的texel不断与背景色做平均，背景色一般是黑色，那结果就是alpah不断降低，而一般alpha clip都是判断alpha小于一个阈值，那么结果就是越是用低分辨率的mipmap，被clip掉的像素就越多，直观感受就是树离得越远就越“秃”，铁丝网离远了则“断”开。"}]},{"ID":"20240510221621-bikik6m","Type":"NodeParagraph","Properties":{"id":"20240510221621-bikik6m","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-8046e5331dd945a6831f6fc4febb0901_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-8046e5331dd945a6831f6fc4febb0901_1440w-20240510221634-k3qswj4.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-0lrsfwg","Type":"NodeParagraph","Properties":{"id":"20240510221621-0lrsfwg","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"解决办法其实也简单，改下生成mipmap时候的filter就行。这个特性，Unity和UE4都是很多年前就都实现了。对于UE4来说，就是改这个texture参数："}]},{"ID":"20240510221621-rhv3jz8","Type":"NodeParagraph","Properties":{"id":"20240510221621-rhv3jz8","updated":"20240510221622"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"v2-2884d4e5208764789044e390fb99ed92_1440w"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/net-img-v2-2884d4e5208764789044e390fb99ed92_1440w-20240510221634-3t6kqfu.webp"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20240510221621-4fxbn7q","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20240510221621-4fxbn7q","updated":"20240510221621"},"Children":[{"Type":"NodeText","Data":"六.参考文献"}]},{"ID":"20240510221621-kdcmuwu","Type":"NodeParagraph","Properties":{"id":"20240510221621-kdcmuwu","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//bgolus.medium.com/anti-aliased-alpha-test-the-esoteric-alpha-to-coverage-8b177335ae4f","TextMarkTextContent":"https://"},{"Type":"NodeTextMark","TextMarkType":"a strong","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//bgolus.medium.com/anti-aliased-alpha-test-the-esoteric-alpha-to-coverage-8b177335ae4f","TextMarkTextContent":"bgolus.medium.com/anti-"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=https%3A//bgolus.medium.com/anti-aliased-alpha-test-the-esoteric-alpha-to-coverage-8b177335ae4f","TextMarkTextContent":"aliased-alpha-test-the-esoteric-alpha-to-coverage-8b177335ae4f"}]},{"ID":"20240510221621-omalt8y","Type":"NodeParagraph","Properties":{"id":"20240510221621-omalt8y","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=http%3A//the-witness.net/news/2010/09/computing-alpha-mipmaps/","TextMarkTextContent":"Computing Alpha Mipmaps"}]},{"ID":"20240510221621-kxpu3fa","Type":"NodeParagraph","Properties":{"id":"20240510221621-kxpu3fa","updated":"20240510221622"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://link.zhihu.com/?target=http%3A//www.humus.name/index.php%3Fpage%3D3D%26ID%3D61","TextMarkTextContent":"Humus - 3D"}]}]}